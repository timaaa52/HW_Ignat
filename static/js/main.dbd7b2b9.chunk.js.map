{"version":3,"sources":["p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p1-main/m1-ui/u1-app/App.module.css"],"names":["Message","props","className","wrapper","message","s","avatar","src","alt","dialog","name","mess","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","inputClass","trim","value","onKeyPress","e","onChange","someClass","GreetingContainer","users","addUserCallback","setName","setError","alert","length","currentTarget","charCode","HW3","setUsers","console","log","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.dbd7b2b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport wrapper from './Message.module.css'\r\nimport s from './Message.module.css'\r\n\r\ntype MassagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MassagePropsType) {\r\n    return (\r\n        <div>\r\n            <div className={wrapper.message}>\r\n                <div><img className={s.avatar} src={props.avatar} alt=\"avatar\"/></div>\r\n                <div className={s.dialog}>\r\n                    <span className={s.name}>{props.name}</span>\r\n                    <span className={s.mess}>{props.message}</span>\r\n                    <span className={s.time}>{props.time}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n\r\n                <ul>\r\n                    <li key={props.affair._id}><span>{props.affair.name}</span>\r\n                    <button onClick={deleteCallback}>X</button>\r\n                    </li>\r\n                </ul>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (value: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'; // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nlet defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // need to fix any\r\n    if (filter === 'all') {\r\n        return affairs\r\n    }\r\n    return affairs.filter(t => t.priority === filter);\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(t => t._id !== _id);\r\n}\r\n\r\n\r\nfunction HW2() {\r\n    let [affairs, setAffairs] = useState(defaultAffairs) // need to fix any\r\n    let [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: () => void // need to fix any\r\n    error: string// need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = name.trim() === '' ? s.error : ''; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onKeyPress={(e) => onKeyPressHandler(e)} onChange={(e) => setNameCallback(e)} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button className={s.someClass} onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(e.currentTarget.value) // need to fix\r\n        setError('')\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if(e.charCode === 13) {\r\n          addUser()\r\n          setName('')\r\n      }\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name.trim() !== '') {\r\n            alert(`Hello ${name} !`) // need to fix\r\n            addUserCallback(name)\r\n            setName('')\r\n        } else {\r\n            setError('Name is required!!!')\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    // const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElementElement>) => {\r\n    //     if(e.keyCode === 13){\r\n    //         addUser();\r\n    //     }\r\n    // }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string// need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n    console.log(users)\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([...users, {_id: v1(), name}]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2J62Z\",\"dialog\":\"Message_dialog__1fOgi\",\"avatar\":\"Message_avatar__3kNfX\",\"time\":\"Message_time__3bvsb\",\"name\":\"Message_name__qYIqi\",\"mess\":\"Message_mess__P1SJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__THRq5\",\"error\":\"Greeting_error__2oy_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__31mgm\"};"],"sourceRoot":""}